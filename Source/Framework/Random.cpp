#include "Random.h"

using namespace myengine;


Random myengine::random;


//=============================================================================
// Constructor
//=============================================================================
Random::Random()
{
	next = 0;
}

Random::Random(unsigned seed)
{
	next = seed;
}

//=============================================================================
// Destructor
//=============================================================================
//Random::~Random() {}

//=============================================================================
// Initialize
//=============================================================================
void Random::initialize(unsigned seed)
{
	next = seed;
}

//=============================================================================
// Returns a random boolean value
//=============================================================================
bool Random::getBool()
{
	return getUnsigned() & 1;
}

//=============================================================================
// Returns a random usigned int
//=============================================================================
int Random::getInt()
{
	return getUnsigned() & 0x7FFFFFFF;
}

//=============================================================================
// Returns a random usigned int below max
//=============================================================================
int Random::getInt(int max)
{
	return getInt() % ++max;
}

//=============================================================================
// Returns a random usigned int
//=============================================================================
unsigned Random::getUnsigned()
{
	next = next * 665 + 1993;
	return next;
}

//=============================================================================
// Returns a random usigned int below max
//=============================================================================
unsigned Random::getUnsigned(unsigned max)
{
	return getUnsigned() % ++max;
}

//=============================================================================
// Returns a random real
//=============================================================================
float Random::getFloat()
{
	return getUnsigned() * (1.0f / 0xFFFFFFFF);
}
